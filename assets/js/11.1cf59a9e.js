(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{216:function(t,a,s){t.exports=s.p+"assets/img/5.bdeceba4.png"},217:function(t,a,s){t.exports=s.p+"assets/img/6.70d1fa27.png"},316:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"laravel"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#laravel"}},[t._v("#")]),t._v(" Laravel")]),t._v(" "),n("h2",{attrs:{id:"laravel安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#laravel安装"}},[t._v("#")]),t._v(" Laravel安装")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://learnku.com/docs/laravel/5.4",target:"_blank",rel:"noopener noreferrer"}},[t._v("5.4中文文档"),n("OutboundLink")],1)]),t._v(" "),n("h3",{attrs:{id:"安装-laravel"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装-laravel"}},[t._v("#")]),t._v(" 安装 Laravel")]),t._v(" "),n("p",[t._v("Laravel 使用 "),n("a",{attrs:{href:"https://getcomposer.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Composer"),n("OutboundLink")],1),t._v(" 来管理代码依赖。所以，在使用 Laravel 之前，请先确认你的电脑上安装了 Composer。")]),t._v(" "),n("h3",{attrs:{id:"通过-laravel-安装工具"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通过-laravel-安装工具"}},[t._v("#")]),t._v(" 通过 Laravel 安装工具")]),t._v(" "),n("p",[t._v("首先，使用 Composer 下载 Laravel 安装包：")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("composer "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"laravel/installer"')]),t._v("\n")])])]),n("p",[t._v("请确定你已将 "),n("code",[t._v("~/.composer/vendor/bin")]),t._v(" 路径加到 PATH，只有这样系统才能找到 "),n("code",[t._v("laravel")]),t._v(" 的执行文件。")]),t._v(" "),n("p",[t._v("一旦安装完成，就可以使用 "),n("code",[t._v("laravel new")]),t._v(" 命令在指定目录创建一个新的 Laravel 项目，例如："),n("code",[t._v("laravel new blog")]),t._v(" 将会在当前目录下创建一个叫 "),n("code",[t._v("blog")]),t._v(" 的目录，此目录里面存放着新安装的 Laravel 和代码依赖。这个方法的安装速度比通过 Composer 安装要快上许多：")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("laravel "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("blog")]),t._v("\n")])])]),n("p",[t._v("因为代码依赖是直接一起打包安装的。")]),t._v(" "),n("h3",{attrs:{id:"通过-composer-create-project"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通过-composer-create-project"}},[t._v("#")]),t._v(" 通过 Composer Create-Project")]),t._v(" "),n("p",[t._v("除此之外，你也可以通过 Composer 在命令行运行 "),n("code",[t._v("create-project")]),t._v(" 命令来安装 Laravel：")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("composer create"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("project "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("prefer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dist laravel"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("laravel blog\n")])])]),n("h3",{attrs:{id:"本地开发服务器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#本地开发服务器"}},[t._v("#")]),t._v(" 本地开发服务器")]),t._v(" "),n("p",[t._v("如果你在本地安装了 PHP，你可能希望像运行 PHP 内置的开发服务器一样来访问自己的应用程序，你可以使用 "),n("code",[t._v("serve")]),t._v(" Artisan 命令来启动一个本地开发服务器，这样你就可以在 "),n("code",[t._v("http://localhost:8000")]),t._v(" 来访问它。")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("php artisan serve\n")])])]),n("p",[t._v("不过有更健壮的本地开发选项可用，比如 "),n("a",{attrs:{href:"https://learnku.com/docs/laravel/5.4/homestead",target:"_blank",rel:"noopener noreferrer"}},[t._v("Homestead"),n("OutboundLink")],1),t._v(" 和 "),n("a",{attrs:{href:"https://learnku.com/docs/laravel/5.4/valet",target:"_blank",rel:"noopener noreferrer"}},[t._v("Valet"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("p",[n("img",{attrs:{src:s(216),alt:""}})]),t._v(" "),n("p",[n("img",{attrs:{src:s(217),alt:""}})]),t._v(" "),n("p",[t._v("配置")]),t._v(" "),n("hr"),t._v(" "),n("p",[n("code",[t._v("入口目录")])]),t._v(" "),n("p",[t._v("在安装 Laravel 之后，你需要配置你的 Web 服务器的根目录为 "),n("code",[t._v("public")]),t._v(" 目录。 这个目录的 "),n("code",[t._v("index.php")]),t._v(" 文件作为所有 HTTP 请求进入应用的前端处理器。")]),t._v(" "),n("p",[n("code",[t._v("配置文件")])]),t._v(" "),n("p",[t._v("Laravel 框架所有的配置文件都存放在 "),n("code",[t._v("config")]),t._v(" 目录下。每个选项都被加入文档")]),t._v(" "),n("h2",{attrs:{id:"核心概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[t._v("#")]),t._v(" 核心概念")]),t._v(" "),n("h3",{attrs:{id:"http层"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http层"}},[t._v("#")]),t._v(" HTTP层")]),t._v(" "),n("p",[t._v("路由：")]),t._v(" "),n("p",[t._v("构建最基本的路由只需要一个 URI 与一个 "),n("code",[t._v("闭包")]),t._v("，这里提供了一个非常简单优雅的定义路由的方法：")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("Route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'foo'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'Hello World'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("默认路由文件：")]),t._v(" "),n("p",[t._v("在 "),n("code",[t._v("routes/web.php")]),t._v(" 文件中定义你的 web 页面路由。  。定义在 "),n("code",[t._v("routes/api.php")]),t._v(" 中的路由都是无状态的，并且会应用 "),n("code",[t._v("api")]),t._v(" 中间件组。")]),t._v(" "),n("h3",{attrs:{id:"可用的路由方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#可用的路由方法"}},[t._v("#")]),t._v(" 可用的路由方法")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("Route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$callback")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取资源")]),t._v("\nRoute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$callback")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建资源")]),t._v("\nRoute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$callback")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//更新资源")]),t._v("\nRoute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$callback")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//增量更新资源")]),t._v("\nRoute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$callback")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//删除资源")]),t._v("\nRoute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("options")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$callback")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//查阅资源支持哪些方法")]),t._v("\n")])])]),n("p",[t._v("有的时候你可能需要注册一个可响应多个 HTTP 方法的路由，这时你可以使用 "),n("code",[t._v("match")]),t._v(" 方法，也可以使用 "),n("code",[t._v("any")]),t._v(" 方法注册一个实现响应所有 HTTP 的请求的路由：")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("Route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'get'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'post'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'/'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nRoute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("any")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'foo'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"路由参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#路由参数"}},[t._v("#")]),t._v(" 路由参数")]),t._v(" "),n("p",[t._v("有时我们需要在路由中捕获一些 URL 片段。例如，我们需要从 URL 中捕获用户的 ID ，我们可以这样定义路由参数：")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("Route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'user/{id}'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'User '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("也可以根据需要在路由中定义多个参数：")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("Route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'posts/{post}/comments/{comment}'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$postId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$commentId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("路由的参数通常都会被放在 "),n("code",[t._v("{}")]),t._v(" 内，并且参数名只能为字母，当运行路由时，参数会通过路由闭包来传递。")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("路由参数不能包含 "),n("code",[t._v("-")]),t._v(" 字符。请用下划线 ("),n("code",[t._v("_")]),t._v(") 替换。")])]),t._v(" "),n("h3",{attrs:{id:"路由组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#路由组"}},[t._v("#")]),t._v(" 路由组")]),t._v(" "),n("p",[t._v("常见的分组方式")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("前缀分组")]),t._v("。"),n("code",[t._v("命名空间分组")]),t._v("。"),n("code",[t._v("中间件分组")]),t._v("。")])]),t._v(" "),n("p",[t._v("路由组允许共享路由属性，例如中间件和命名空间等，我们没有必要为每个路由单独设置共有属性，共有属性会以数组的形式放到 "),n("code",[t._v("Route::group")]),t._v(" 方法的第一个参数中。")]),t._v(" "),n("p",[n("code",[t._v("中间件")])]),t._v(" "),n("p",[t._v("要给路由组中定义的所有路由分配中间件，可以在路由组中使用 "),n("code",[t._v("middleware")]),t._v(" 键，中间件将会依照列表内指定的顺序运行：")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("Route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("group")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'middleware'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'auth'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'/'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 `Auth` 中间件")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'user/profile'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 `Auth` 中间件")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("code",[t._v("命名空间")])]),t._v(" "),n("p",[t._v("另一个常见的例子是，为控制器组指定公共的 "),n("code",[t._v("PHP")]),t._v(" 命名空间。这时使用 "),n("code",[t._v("namespace")]),t._v(" 参数来指定组内所有控制器的公共命名空间：")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("Route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("group")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'namespace'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'Admin'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 在 "App\\Http\\Controllers\\Admin" 命名空间下的控制器')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("请记住，默认 "),n("code",[t._v("RouteServiceProvider")]),t._v(" 会在命名空间组中引入你的路由文件，让你不用指定完整的 "),n("code",[t._v("App\\Http\\Controllers")]),t._v(" 命名空间前缀就能注册控制器路由，因此，我们在定义的时候只需要指定命名空间 "),n("code",[t._v("App\\Http\\Controllers")]),t._v(" 以后的部分。")]),t._v(" "),n("p",[n("code",[t._v("路由前缀")])]),t._v(" "),n("p",[t._v("通过路由组数组属性中的 "),n("code",[t._v("prefix")]),t._v(" 键可以给每个路由组中的路由加上指定的 URI 前缀，例如，我们可以给路由组中所有的 URI 加上路由前缀 "),n("code",[t._v("admin")]),t._v(" :")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("Route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("group")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'prefix'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'admin'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'users'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 匹配包含 "/admin/users" 的 URL')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"获取请求参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取请求参数"}},[t._v("#")]),t._v(" 获取请求参数")]),t._v(" "),n("p",[t._v("利用路由指定参数")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("在 Route 中使用 "),n("code",[t._v("{value}")]),t._v(" 格式规定必传参数")])]),t._v(" "),n("li",[n("p",[t._v("在控制器中可以直接当做 入参 来获取参数值")])]),t._v(" "),n("li",[n("p",[t._v("可以使用 "),n("code",[t._v("{value？}")]),t._v(" 格式规定可选参数")])])]),t._v(" "),n("h3",{attrs:{id:"控制器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#控制器"}},[t._v("#")]),t._v(" 控制器")]),t._v(" "),n("ul",[n("li",[t._v("自动生成增删改以及符合 RESTful 规范的路由")]),t._v(" "),n("li",[t._v("在 Artisan 中生成控制器时加入 "),n("code",[t._v("--resource")]),t._v(" 参数")]),t._v(" "),n("li",[t._v("在路由中使用 "),n("code",[t._v("Route::resources()")]),t._v(" 生成配套资源路由")])]),t._v(" "),n("h3",{attrs:{id:"控制器中每个方法的意义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#控制器中每个方法的意义"}},[t._v("#")]),t._v(" 控制器中每个方法的意义")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("index()")]),t._v(" 展示所有资源信息")]),t._v(" "),n("li",[n("code",[t._v("create()")]),t._v(" 展示创建表单")]),t._v(" "),n("li",[n("code",[t._v("store()")]),t._v(" 处理创建表单的数据 并整理入库")]),t._v(" "),n("li",[n("code",[t._v("show()")]),t._v(" 展示单个资源信息")]),t._v(" "),n("li",[n("code",[t._v("edit()")]),t._v(" 展示编辑表单")]),t._v(" "),n("li",[n("code",[t._v("update()")]),t._v(" 收集更新表单中的数据 并整理入库")]),t._v(" "),n("li",[n("code",[t._v("delete()")]),t._v(" 删除资源信息")])]),t._v(" "),n("p",[t._v("自定义资源路由")]),t._v(" "),n("ul",[n("li",[t._v("使用 "),n("code",[t._v("only")]),t._v(" 关键字指定白名单 。 使用 "),n("code",[t._v("expect")]),t._v(" 关键字指定白名单")])]),t._v(" "),n("h2",{attrs:{id:"中间件-middleware"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#中间件-middleware"}},[t._v("#")]),t._v(" 中间件 Middleware")]),t._v(" "),n("p",[t._v("什么是中间件？")]),t._v(" "),n("p",[t._v("Laravel 中间件提供了一种方便的机制来"),n("code",[t._v("过滤进入应用的 HTTP 请求")]),t._v("，例如，Laravel 包含验证用户身份权限的中间件。如果用户没有通过身份验证，中间件会重定向到登录页，引导用户登录。反之，中间件将允许该请求继续传递到应用程序。")]),t._v(" "),n("p",[t._v("当然，除了身份验证以外，中间件还可以被用来执行各式各样的任务，如：CORS 中间件负责为所有即将离开应用的响应添加适当的头信息；日志中间件可以记录所有传入应用的请求。")]),t._v(" "),n("p",[t._v("Laravel 已经内置了一些中间件，包括身份验证、CSRF 保护等。所有的中间件都放在 "),n("code",[t._v("app/Http/Middleware")]),t._v(" 目录内。")]),t._v(" "),n("h3",{attrs:{id:"创建中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建中间件"}},[t._v("#")]),t._v(" 创建中间件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("php artisan make:middleware CheckAge\n")])])]),n("p",[t._v("该命令将会在 "),n("code",[t._v("app/Http/Middleware")]),t._v(" 目录内新建一个 "),n("code",[t._v("CheckAge")]),t._v(" 类。在这个中间件内，我们仅允许请求的 "),n("code",[t._v("age")]),t._v(" 参数小于 200 时访问该路由，否则，会将用户请求重定向到 "),n("code",[t._v("home")]),t._v(" URI 。")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token php language-php"}},[n("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token package"}},[t._v("App"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Http"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Middleware")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token package"}},[t._v("Closure")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CheckAge")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 处理传入的请求\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\Closure  $next\n     * @return mixed\n     */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Closure "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("age")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("redirect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'home'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),n("p",[t._v("如你所见，若请求参数 "),n("code",[t._v("age")]),t._v(" 小于等于 "),n("code",[t._v("200")]),t._v("，中间件将返回给客户端 HTTP 重定向，反之应用程序才会继续处理该请求。若将请求继续传递到应用程序（即允许通过中间件验证），只需将 "),n("code",[t._v("$request")]),t._v(" 作为参数调用 "),n("code",[t._v("$next")]),t._v(" 回调函数。")]),t._v(" "),n("p",[t._v("最好将中间件想象为一系列的"),n("code",[t._v("「层」")]),t._v("，HTTP 请求必须经过它们才会触发您的应用程序。每一层都可以检测接收的请求，甚至可以完全拒绝请求访问您的应用。")]),t._v(" "),n("h3",{attrs:{id:"视图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[t._v("#")]),t._v(" 视图")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("使用 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("view")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 返回视图 接受两个参数 路径和数据\n在视图中使用 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$varname")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 来展示数据\n在视图中使用 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$varname")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 来展示数据\n")])])]),n("p",[t._v("视图的用途是用来存放应用程序中 HTML 内容，并且能够将你的控制器层"),n("code",[t._v("（或应用逻辑层）")]),t._v("与展现层分开。视图文件目录为 "),n("code",[t._v("resources/views")]),t._v(" ，示例视图如下：")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("html"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Hello"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("p",[t._v("上述视图文件位置为 "),n("code",[t._v("resources/views/greeting.blade.php")]),t._v(" ，  通过全局函数 "),n("code",[t._v("view")]),t._v(" 来使用这个视图，如下：")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("Route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'/'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("view")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'greeting'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'name'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'James'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("如你所见，"),n("code",[t._v("view")]),t._v(" 函数中，第一个参数是 "),n("code",[t._v("resources/views")]),t._v(" 目录中视图文件的文件名，第二个参数是一个数组，数组中的数据可以直接在视图文件中使用。在上面示例中，我们将 "),n("code",[t._v("name")]),t._v(" 变量传递到了视图中，并在视图中使用 "),n("a",{attrs:{href:"https://learnku.com/docs/laravel/5.4/blade",target:"_blank",rel:"noopener noreferrer"}},[t._v("Blade 模板语言"),n("OutboundLink")],1),t._v(" 打印出来。")]),t._v(" "),n("h2",{attrs:{id:"前端"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前端"}},[t._v("#")]),t._v(" 前端")]),t._v(" "),n("p",[n("code",[t._v("Blade模板")])]),t._v(" "),n("p",[t._v("Blade 是 Laravel 提供的一个既简单又强大的模板引擎。和其他流行的 PHP 模板引擎不一样，Blade 并不限制你在视图中使用原生 PHP 代码。所有 Blade 视图文件都将被编译成原生的 PHP 代码并缓存起来，除非它被修改，否则不会重新编译，这就意味着 Blade 基本上不会给你的应用增加任何额外负担。Blade 视图文件使用 "),n("code",[t._v(".blade.php")]),t._v(" 扩展名，一般被存放在 "),n("code",[t._v("resources/views")]),t._v(" 目录。")]),t._v(" "),n("h3",{attrs:{id:"模板继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模板继承"}},[t._v("#")]),t._v(" 模板继承")]),t._v(" "),n("p",[t._v('先通过一个简单的例子来上手。首先，我们需要确认一个 "master" 的页面布局。因为大多数 web 应用是在不同的页面中使用相同的布局方式，我们可以很方便的定义这个 Blade 布局视图：')]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 文件保存于 resources"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("views"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("layouts"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("blade"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("php "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("html"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("head"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("title"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("应用程序名称 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'title'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("title"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("head"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        @"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("section")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'sidebar'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            这是 master 的侧边栏。\n        @show\n\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"container"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'content'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("p",[t._v("请注意 "),n("code",[t._v("@section")]),t._v(" 和 "),n("code",[t._v("@yield")]),t._v(" 命令。 "),n("code",[t._v("@section")]),t._v(" 命令正如其名字所暗示的一样是用来"),n("code",[t._v("定义一个视图区块")]),t._v("，而 "),n("code",[t._v("@yield")]),t._v(" 指令是用来"),n("code",[t._v("显示指定区块的内容")]),t._v("。接着来定义一个继承此布局的子页面")]),t._v(" "),n("p",[n("code",[t._v("继承页面布局")])]),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("使用 Blade 提供的 "),n("code",[t._v("@extends")]),t._v(" 命令来为子页面指定其所 "),n("code",[t._v("「继承」")]),t._v(" 的页面布局。 当子页面继承布局之后，即可使用 "),n("code",[t._v("@section")]),t._v(" 命令将内容注入于布局的 "),n("code",[t._v("@section")]),t._v(" 区块中。"),n("code",[t._v("布局中使用 @yield 的地方将会显示这些区块中的内容")])]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" Stored in resources"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("views"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("blade"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("php "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n@"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'layouts.app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("section")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'title'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'Page Title'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("section")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'sidebar'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("parent")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("This is appended to the master sidebar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n@endsection\n\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("section")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'content'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("This is my body content"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n@endsection\n")])])]),n("p",[n("code",[t._v("sidebar")]),t._v(" 区块利用了 "),n("code",[t._v("@parent")]),t._v(" 命令追加布局中的 sidebar 区块中的内容，如果不使用则会覆盖掉布局中的这部分内容。 "),n("code",[t._v("@parent")]),t._v(" 命令会在视图被渲染时替换为布局中的内容。")]),t._v(" "),n("h3",{attrs:{id:"创建一个布局文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建一个布局文件"}},[t._v("#")]),t._v(" 创建一个布局文件")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//步骤")]),t._v("\n定义一个名为 layout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("blade"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("php 的主布局文件\n定义多个子视图文件，如 菜单、头部页脚等\n在其他视图中继承布局文件\n  \n  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//相关语法")]),t._v("\n@section 定义视图的局部内容 使用 @show 结尾\n@"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" 定义指定部分的内容\n@"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" 继承主视图模板\n@"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("parent")]),t._v(" 引用 @section 中的内容且不覆盖\n在子视图中的 @section 标签要以 @endsection 标签来结尾\n@section 可以独写一行 也可以定义一部分区域  \n")])])]),n("h3",{attrs:{id:"常见-blade-语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见-blade-语法"}},[t._v("#")]),t._v(" 常见 Blade 语法")]),t._v(" "),n("p",[n("code",[t._v("普通输出")])]),t._v(" "),n("hr"),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$varName")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   输出一个经过转义的变量\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$varName")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    输出变量的原始值\n\n@"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$varName")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   保持表达式不变\n\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   直接输出 json 表达式\n\n@verbatim   输出大段原始表达式\n")])])]),n("p",[n("code",[t._v("流程控制表达式")])]),t._v(" "),n("hr"),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("@"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elseif")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 和 @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unless")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 便捷表达式\n\n@"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("isset")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 和 @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n@"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v(" @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" 和 @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endswitch")]),t._v("\n\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("auth")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 和 @"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("guest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 认证表达式\n\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasSection")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 和 @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 判断 section 是否存在\n\n@"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" 和 @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endfor")]),t._v("\n\n@"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 和 @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endforeach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forelse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 、 @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 和 @"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("endforelse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n@"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("code",[t._v("其他表达式")])]),t._v(" "),n("hr"),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("@php 和 @endphp 直接运行 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PHP")]),t._v(" 代码\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  模板注释 结果不会展示在最终输出的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 中\n")])])]),n("h2",{attrs:{id:"数据库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[t._v("#")]),t._v(" 数据库")]),t._v(" "),n("h3",{attrs:{id:"laravel-的数据库迁移-migrations"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#laravel-的数据库迁移-migrations"}},[t._v("#")]),t._v(" Laravel 的数据库迁移 Migrations")]),t._v(" "),n("p",[t._v("Laravel 的 "),n("code",[t._v("Schema")]),t._v(" "),n("a",{attrs:{href:"https://learnku.com/docs/laravel/5.4/facades",target:"_blank",rel:"noopener noreferrer"}},[t._v("facade"),n("OutboundLink")],1),t._v(" 对所有 Laravel 支持的数据库系统提供了创建和操作数据表的相应支持。")]),t._v(" "),n("p",[t._v("使用 "),n("code",[t._v("make:migration")]),t._v(" "),n("a",{attrs:{href:"https://learnku.com/docs/laravel/5.4/artisan",target:"_blank",rel:"noopener noreferrer"}},[t._v("Artisan 命令"),n("OutboundLink")],1),t._v(" 来创建迁移：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("php artisan make:migration create_users_table\n")])])]),n("p",[t._v("新的迁移文件将会被放置在 "),n("code",[t._v("database/migrations")]),t._v(" 目录中。每个迁移文件的名称都包含了一个"),n("code",[t._v("时间戳")]),t._v("，以便让 Laravel 确认迁移的顺序。")]),t._v(" "),n("p",[n("code",[t._v("--table")]),t._v(" 和 "),n("code",[t._v("--create")]),t._v(" 选项可用来指定数据表的名称，或是该迁移被执行时会创建的新数据表。这些选项需在预生成迁移文件时填入指定的数据表：")]),t._v(" "),n("h3",{attrs:{id:"laravel-中操作数据库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#laravel-中操作数据库"}},[t._v("#")]),t._v(" Laravel 中操作数据库")]),t._v(" "),n("ol",[n("li",[t._v("使用原生SQL语句")]),t._v(" "),n("li",[t._v("查询构造器")]),t._v(" "),n("li",[t._v("Eloquent ORM")])]),t._v(" "),n("p",[n("code",[t._v("原生 SQL")])]),t._v(" "),n("p",[t._v("使用 "),n("code",[t._v("DB::select()")]),t._v(" "),n("code",[t._v("DB::insert()")]),t._v(" "),n("code",[t._v("DB::update()")]),t._v(" "),n("code",[t._v("DB::delete()")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"查询构造器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查询构造器"}},[t._v("#")]),t._v(" 查询构造器")]),t._v(" "),n("p",[n("code",[t._v("查询数据")])]),t._v(" "),n("ul",[n("li",[t._v("语法 "),n("code",[t._v("DB::table()")]),t._v(" 指定数据库")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("where()")]),t._v(" 加入条件")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("get()")]),t._v(" 或 first() 取多条或一条数据")]),t._v(" "),n("li",[n("code",[t._v("count()")]),t._v(" "),n("code",[t._v("max()")]),t._v(" "),n("code",[t._v("min()")]),t._v(" "),n("code",[t._v("avg()")]),t._v(" "),n("code",[t._v("sum()")]),t._v(" 统计数据")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("exists()")]),t._v(" 或 doesntExtist() 判断数据是否存在")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("DB::raw()")]),t._v(" 加入原生 SQL 语句")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("join()")]),t._v(" 进行关联表查询")]),t._v(" "),n("li",[n("code",[t._v("orderby()")]),t._v(" 传递 字段 和 排序方式 进行排序")]),t._v(" "),n("li",[n("code",[t._v("groupBy()")]),t._v(" 和 "),n("code",[t._v("having()")]),t._v(" 对查询结果进行分组")])]),t._v(" "),n("p",[n("code",[t._v("插入数据")])]),t._v(" "),n("ul",[n("li",[t._v("使用  "),n("code",[t._v("insert()")]),t._v("  插入一条或多条数据")]),t._v(" "),n("li",[t._v("传递数组即为批量插入")]),t._v(" "),n("li",[t._v("使用  "),n("code",[t._v("insertGetId()")]),t._v("  获取自增主键的ID值")])]),t._v(" "),n("p",[n("code",[t._v("更新数据")])]),t._v(" "),n("ul",[n("li",[t._v("使用  "),n("code",[t._v("update()")]),t._v("  更新指定的数据")]),t._v(" "),n("li",[n("code",[t._v("increment()")]),t._v("  和  decrement() 自增/自减 字段的值")])]),t._v(" "),n("p",[n("code",[t._v("删除数据")])]),t._v(" "),n("ul",[n("li",[t._v("使用  "),n("code",[t._v("delete()")]),t._v("  删除指定的数据")]),t._v(" "),n("li",[t._v("使用  "),n("code",[t._v("truncate()")]),t._v("  清空表")])]),t._v(" "),n("h3",{attrs:{id:"数据填充"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据填充"}},[t._v("#")]),t._v(" 数据填充")]),t._v(" "),n("p",[n("code",[t._v("生成一个 Seeder")])]),t._v(" "),n("p",[t._v("Laravel 可以用 seed 类轻松地为数据库填充测试数据。所有的 seed 类都存放在 "),n("code",[t._v("database/seeds")]),t._v(" 目录下。你可以任意为 seed 类命名，但是应该遵守类似 "),n("code",[t._v("UsersTableSeeder")]),t._v(" 的命名规范。Laravel 默认定义了一个 "),n("code",[t._v("DatabaseSeeder")]),t._v(" 类。可以在这个类中使用 "),n("code",[t._v("call")]),t._v(" 方法来运行其它的 seed 类来控制数据填充的顺序。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("php artisan make:seeder UsersTableSeeder\n//生成一个 Seeder\n")])])]),n("ul",[n("li",[t._v("在 "),n("code",[t._v("run()")]),t._v(" 方法内定义需要填充的数据")]),t._v(" "),n("li",[t._v("运行 "),n("code",[t._v("php artisan db:seed")]),t._v(" 命令 填充数据")])]),t._v(" "),n("p",[t._v("一个 seeder 类只包含一个默认方法："),n("code",[t._v("run")]),t._v("。这个方法在 "),n("code",[t._v("db:seed")]),t._v(" "),n("a",{attrs:{href:"https://learnku.com/docs/laravel/5.4/artisan",target:"_blank",rel:"noopener noreferrer"}},[t._v("Artisan 命令"),n("OutboundLink")],1),t._v(" 被调用时执行。在 "),n("code",[t._v("run")]),t._v(" 方法里你可以为数据库添加任何数据。你也可以用 "),n("a",{attrs:{href:"https://learnku.com/docs/laravel/5.4/queries",target:"_blank",rel:"noopener noreferrer"}},[t._v("查询语句构造器"),n("OutboundLink")],1),t._v(" 或 "),n("a",{attrs:{href:"https://learnku.com/docs/laravel/5.4/database-testing#writing-factories",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eloquent 模型工厂"),n("OutboundLink")],1),t._v(" 来手动添加数据。")]),t._v(" "),n("h2",{attrs:{id:"orm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#orm"}},[t._v("#")]),t._v(" ORM")]),t._v(" "),n("p",[t._v("Laravel 的 Eloquent ORM 提供了漂亮、简洁的 ActiveRecord 实现来和数据库进行交互。每个数据库表都有一个对应的"),n("code",[t._v("「模型」")]),t._v("可用来跟数据表进行交互。你可以通过模型查询数据表内的数据，以及将记录添加到数据表中。")]),t._v(" "),n("p",[t._v("在开始之前，请确认你已在 "),n("code",[t._v("config/database.php")]),t._v(" 文件中设置好了数据库连接。更多数据库的设置信息请查看 "),n("a",{attrs:{href:"https://learnku.com/docs/laravel/5.4/database#configuration",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据库设置"),n("OutboundLink")],1),t._v(" 文档。")])])}),[],!1,null,null,null);a.default=e.exports}}]);